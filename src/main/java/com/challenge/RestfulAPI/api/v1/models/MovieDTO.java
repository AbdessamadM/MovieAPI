package com.challenge.RestfulAPI.api.v1.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;
import java.io.Serializable;

/**
 * @Author abdessamadM on 23/06/2020
 *
 * L'annotation @JsonProperty va servir à matcher le nom de la propriété json avec l'attribut de la classe MovieDTO
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class MovieDTO implements Serializable {

    @ApiModelProperty(notes = "Movie id automatically generated by database", example = "1")
    private Long id;

    @NotBlank
    @Size(max = 250)
    @ApiModelProperty(notes = "The title of the movie", example = "Matrix")
    @JsonProperty("Title")
    private String title;

    @Size(max = 4)
    @ApiModelProperty(notes = "The released year of the movie", example = "1999")
    @JsonProperty("Year")
    private String year;

    @Size(max = 20)
    @ApiModelProperty(notes = "The Imdb ID of the movie", example = "tt0133093")
    @JsonProperty("imdbID")
    private String imdbId;

    @Size(max = 20)
    @ApiModelProperty(notes = "The type of the record, it can be either (movie, series, episode or game)", example = "movie")
    @JsonProperty("Type")
    private String type;

    @Size(max = 250)
    @ApiModelProperty(notes = "The poster of the movie", example = "https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg")
    @JsonProperty("Poster")
    private String posterUrl;
}
